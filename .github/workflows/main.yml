name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: PNPM Setup
        uses: pnpm/action-setup@v2
        with:
          version: "10.15.0"

      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.18.0"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get Playwright version
        id: versions
        run: |
          echo "playwright=$(pnpm --silent playwright:version)" >> $GITHUB_OUTPUT

      - name: Build packages
        run: pnpm build

      - name: Install Playwright Browsers
        run: pnpm dlx playwright@${{ steps.versions.outputs.playwright }} install --with-deps

      - name: Run Playwright tests
        run: pnpm test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./*/**/playwright-report/
          retention-days: 30

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    needs:
      - test
    steps:
      - name: Generate bot app token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.RELEASER_ID }}
          private-key: ${{ secrets.RELEASER_PRIVATE_KEY }}
      - name: PNPM Setup
        uses: pnpm/action-setup@v2
        with:
          version: "10.15.0"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Get bot user ID
        id: bot-user-id
        run: |
          echo "user-id=$(gh api "/users/${{ steps.generate_token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          GIT_AUTHOR_EMAIL: "${{ steps.bot-user-id.outputs.user-id }}+${{ steps.generate_token.outputs.app-slug }}[bot]@users.noreply.github.com"
          GIT_COMMITTER_EMAIL: "${{ steps.bot-user-id.outputs.user-id }}+${{ steps.generate_token.outputs.app-slug }}[bot]@users.noreply.github.com"
        run: pnpm release
